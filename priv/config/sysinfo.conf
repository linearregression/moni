{atom, ""}.
{atom_used, ""}.
{binary, ""}.
{code, ""}.
{ets, ""}.
{io_input, ""}.
{io_output, ""}.
{kernel_poll, "Returns true if the emulator uses some kind of kernel-poll implementation; otherwise, false."}.
{logical_processors, "Returns the detected number of logical processors configured on the system. The return value is either an integer, or the atom unknown if the emulator wasn't able to detect logical processors configured."}.
{logical_processors_available, "Returns the detected number of logical processors available to the Erlang runtime system. The return value is either an integer, or the atom unknown if the emulator wasn't able to detect logical processors available. The number of logical processors available is less than or equal to the number of logical processors online."}.
{logical_processors_online, "Returns the detected number of logical processors online on the system. The return value is either an integer, or the atom unknown if the emulator wasn't able to detect logical processors online. The number of logical processors online is less than or equal to the number of logical processors configured."}.
{otp_release, "Returns a string containing the OTP release number."}.
{process_count, "Returns the number of ports currently existing at the local node as an integer. The same value as length(erlang:ports()) returns, but more efficient."}.
{process_limit, "Returns the maximum number of simultaneously existing processes at the local node as an integer. This limit can be configured at startup by using the +P command line flag of erl(1)."}.
{processes, ""}.
{processes_used, ""}.
{run_queue, ""}.
{smp_support,""}.
{system, ""}.
{system_architecture, ""}.
{thread_pool_size, ""}.
{threads, "Returns true if the emulator has been compiled with thread support; otherwise, false is returned."}.
{total, ""}.
{uptime, ""}.
{version, "Returns a string containing the version number of the emulator."}.
{wordsize_external, ""}.
{wordsize_internal, "Returns the size of Erlang term words in bytes as an integer, i.e. on a 32-bit architecture 4 is returned, and on a pure 64-bit architecture 8 is returned. On a halfword 64-bit emulator, 4 is returned, as the Erlang terms are stored using a virtual wordsize of half the systems wordsize."}.